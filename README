1. Team:
Peng Song (uni: ps2839)
Lan Yang (uni: ly2331) 

2. Files:
main.py 			#python program
stopwords.txt		#stop words list
README				#readme file

3. Description of Running:
To run our program, run the following command:
$python main.py <bing account key><precision><query>

<bing account key>is our Bing Search Account Key
<query>is your query, a list of words in single quotes(e.g., 'Milky Way')
<precision>is the target value for precision@10, a real between 0 and 1

4. Internal Design:
a. Receive user's input, bing account key, a query and a precision value. 
b. Retrive the top-10 results for query from Bing. For each result, store words extracted from 
retrived result's title and summary to the word set. Notice that stop words are excluded from 
the word set. According to user's feedback (relevant or irrelevant),  we calculate and 
normalize each word's weight.
c. Recalculate precision, if it's above or equal to target precision, then stop. If it's below 
target precision, pick the top-2 words from word set and append them to query. Go to step b.

5. Query-modification Method:
a. Rocchio algorithm
We used Rocchio algorithm to aid calculation of words' weights.
For each word, if it appears in both relevant and irrelevant results, its weight is calculated 
by substracting its irrelevant weight from its relevant weight. Original relevant weight(rw) 
and irrelevant weight(iw) are calculated as this word's frequency in the document divided by 
total number of words of the document. Since we care more about relevant result, we assign 
weights to rw and iw. So the final weight is (a * rw - b * iw), in this program, a = 0.75, 
b = 0.15. If the word does not appear in relevant result, its weight is 0.

b. stop words list
We import a stop words list to exclude stop words, like a, the, etc., from word set. In that way, weights of stop words will not be calculated. Furthermore, it prevents stop words from appearing in the top 2 words. This greatly improves both correctness and efficiency.
reference: http://www.webconfs.com/stop-words.php

c. order of appended words
We append words according to their weights. Word with highest weight will be appended first. Also in each iteration, we take all the words in the query into account, not just the 2 words augmented in this iteration.

d. other checks
We checked the uppercase and lowercase of the same word, to make sure the same word differ in case would not be augmented twice, like "Musk" and "musk". Also we checked to make sure words augmented in the query already won't be added twice.

6. Bing Search Account Key:
Ib4wTA9BOGjrp2Nug7wqKJN3Sjw++0u84wcBY5oN8U0

